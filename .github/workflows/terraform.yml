name: Terraform

on:
  pull_request:
    branches:
      - main
    paths:
      - "**/*.tf"

jobs:
  lint-terraform:
    name: Terraform lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          sudo snap install terraform --classic
          sudo snap install just --classic
      - name: Lint the Terraform modules
        run: just lint-terraform
  lint-terraform-docs:
    name: Lint terraform docs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          sudo snap install terraform --classic
          sudo snap install terraform-docs
          sudo snap install just --classic
      - name: Lint the Terraform docs
        run: just lint-terraform-docs
  validate-terraform:
    name: Terraform validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          sudo snap install terraform --classic
          sudo snap install just --classic
      - name: Validate the Terraform modules
        run: just validate-terraform
  setup-microceph:
    name: Install and setup Microceph
    uses: canonical/observability-stack/.github/workflows/_setup_microceph.yml@feat/cos-upgrade  # TODO: Fix branch
  test-integration-cos-lite:
    name: Terraform integration COS Lite
    runs-on: ubuntu-latest
    needs:
      - setup-microceph
    strategy:
      fail-fast: false
      matrix:
        product: [ "cos", "cos_lite" ]
        scenario: [ "tls_full", "tls_external", "tls_internal", "tls_none" ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          sudo snap install concierge --classic
          sudo concierge prepare --juju-channel 3.6/stable -p microk8s --extra-snaps just,astral-uv,terraform
      - name: Test Terraform product module upgrade scenarios
        run: |
          export S3_ENDPOINT=http://$(ip -4 -j route get 2.2.2.2 | jq -r '.[] | .prefsrc'):8080
          export S3_ACCESS_KEY=access-key
          export S3_SECRET_KEY=secret-key
          just integration ${{ matrix.product }}/${{ matrix.scenario }}/test_upgrade_${{ matrix.product }}_${{ matrix.scenario }}.py
