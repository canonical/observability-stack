name: Test the Terraform product module

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      product:
        required: true
        type: string
      runner:
        type: string
        default: ubuntu-latest

jobs:
  terraform-test:
    name: Test product module
    runs-on: ${{ inputs.runner-labels }}
    strategy:
      fail-fast: false
      matrix:
        scenario: ["tls_full", "tls_external", "tls_internal", "tls_none"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          sudo snap install concierge --classic
          sudo concierge prepare --juju-channel 3.6/stable -p microk8s --extra-snaps just,astral-uv,terraform
      - name: Install and configure microceph
        if: ${{ inputs.product == 'cos' }}
        run: |
          # https://github.com/canonical/microceph-action/blob/main/microceph.sh
          function check_ceph_ok_or_exit () {
              i=0
              for i in {1..5}; do
                  if sudo microceph.ceph status | grep HEALTH_OK; then
                      break
                  else
                      sudo microceph.ceph status
                      sleep 30
                      sudo microceph.ceph health detail
                  fi
              done
              if [ "$i" -eq 5 ]; then
                  exit 1
              fi
          }

          sudo snap install microceph
          sudo microceph cluster bootstrap
          sleep 30s
          sudo microceph.ceph config set "mon.$(hostname)" mon_data_avail_warn 6
          sudo microceph disk add loop,2G,3
          check_ceph_ok_or_exit

          sudo microceph enable rgw --port 8080 --ssl-port 8443
          sudo microceph.radosgw-admin user create --uid=user --display-name=User
          sudo microceph.radosgw-admin key create --uid=user --key-type=s3 --access-key=access-key --secret-key=secret-key

          # TODO make these env vars in workflow ${{ secrets.S3_SECRET_KEY }}
          export S3_ENDPOINT=http://$(ip -4 -j route get 2.2.2.2 | jq -r '.[] | .prefsrc'):8080
          export S3_ACCESS_KEY=access-key
          export S3_SECRET_KEY=secret-key
      - name: Test deployment
        run: |
          just integration ${{ inputs.product }}/${{ matrix.scenario }}
